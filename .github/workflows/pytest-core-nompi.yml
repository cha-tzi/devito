name: CI-core

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci-linux:
    name: ${{ matrix.name }}
    runs-on: ubuntu-16.04

    env:
      DEVITO_ARCH: "${{ matrix.arch }}"
      DEVITO_OPENMP: ${{ matrix.openmp }}
      DEVITO_BACKEND: "core"
      OMP_NUM_THREADS: 2
      PYTHON_VERSION: "${{ matrix.python-version }}"
      RUN_CMD:
      TESTS: "${{ matrix.tests }}"

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false

      matrix:
        name: [
           py36-gcc49-openmp,
           py37-gcc5-openmp,
           py38-gcc6-openmp,
           py36-gcc7-openmp,
           py37-gcc7-noopenmp,
           py37-gcc8-openmp,
           py38-gcc9-openmp,
           py37-osx,
           docker-devito
        ]
        include:
            - name: py36-gcc49-openmp
              python-version: 3.6
              arch: "gcc-4.9"
              openmp: 1
              tests: "tests/"

            - name: py37-gcc5-openmp
              python-version: 3.7
              arch: "gcc-5"
              openmp: 1
              tests: "tests/"

            - name: py38-gcc6-openmp
              python-version: 3.8
              arch: "gcc-6"
              openmp: 1
              tests: "tests/"

            - name: py36-gcc7-openmp
              python-version: 3.6
              arch: "gcc-7"
              openmp: 1
              tests: "tests/"

            - name: py37-gcc7-noopenmp
              python-version: 3.7
              arch: "gcc-7"
              openmp: 0
              tests: "tests/"

            - name: py37-gcc8-openmp
              python-version: 3.7
              arch: "gcc-8"
              openmp: 1
              tests: "tests/"

            - name: py38-gcc9-openmp
              python-version: 3.8
              arch: "gcc-9"
              openmp: 1
              tests: "tests/"

            - name: py37-clang-osx
              python-version: 3.8
              arch: "osx"
              openmp: 0
              tests: "tests/test_operator.py"

            - name: docker-devito
              python-version: 3.6
              arch: "gcc"
              openmp: 1

    steps:
    - name: Checkout devito
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.name != 'docker-devito'
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build docker image
      if: matrix.name == 'docker-devito'
      run: |
          docker build . --file docker/Dockerfile --tag devito_img
          echo "::set-env name=RUN_CMD::docker run --rm --name testrun devito_img"

    - name: Install GCC ${{ matrix.gcc-version }}
      if: runner.os == 'linux'
      run : |
        sudo apt-get install -y ${{ matrix.arch }}

    - name: Install dependencies
      if: matrix.name != 'docker-devito'
      run: |
        pip install --upgrade pip
        pip install -e .

    - name: Test with pytest
      run: |
        $RUN_CMD pytest --cov --cov-config=.coveragerc --cov-report=xml $TESTS

    - name: Upload coverage to Codecov
      if: matrix.name != 'docker-devito'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: "py37-clang-osx"
